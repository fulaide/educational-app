name: 📦 Dependency Management

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'minor'
        type: choice
        options:
        - patch
        - minor
        - major
        - security-only

concurrency:
  group: dependencies-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Security audit and updates
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    outputs:
      vulnerabilities: ${{ steps.audit.outputs.vulnerabilities }}
      security-updates: ${{ steps.audit.outputs.security-updates }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run security audit
        id: audit
        run: |
          echo "Running security audit..."
          if npm audit --audit-level high --json > audit-results.json 2>/dev/null; then
            echo "vulnerabilities=false" >> $GITHUB_OUTPUT
            echo "security-updates=none" >> $GITHUB_OUTPUT
          else
            echo "vulnerabilities=true" >> $GITHUB_OUTPUT
            VULN_COUNT=$(cat audit-results.json | jq '.metadata.vulnerabilities.total // 0')
            echo "security-updates=$VULN_COUNT vulnerabilities found" >> $GITHUB_OUTPUT
          fi

      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json

  # Update dependencies
  update-dependencies:
    name: 🔄 Update Dependencies
    runs-on: ubuntu-latest
    needs: [security-audit]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔄 Update dependencies
        run: |
          UPDATE_TYPE="${{ inputs.update_type || 'minor' }}"
          echo "Updating $UPDATE_TYPE dependencies..."
          
          case $UPDATE_TYPE in
            "patch")
              npx npm-check-updates -u --target patch
              ;;
            "minor")
              npx npm-check-updates -u --target minor
              ;;
            "major")
              npx npm-check-updates -u --target latest
              ;;
            "security-only")
              npm audit fix
              ;;
          esac

      - name: 📦 Install updated dependencies
        run: npm install

      - name: 🧪 Run tests with updated dependencies
        run: |
          npm run lint
          npm run type-check
          npm run test -- --run
          npm run build

      - name: 📝 Create dependency update summary
        run: |
          echo "## 📦 Dependency Updates" > dependency-summary.md
          echo "" >> dependency-summary.md
          echo "**Update Type:** ${{ inputs.update_type || 'minor' }}" >> dependency-summary.md
          echo "**Date:** $(date)" >> dependency-summary.md
          echo "" >> dependency-summary.md
          
          if [ -n "$(git diff --name-only)" ]; then
            echo "### Changed Files:" >> dependency-summary.md
            git diff --name-only | sed 's/^/- /' >> dependency-summary.md
            echo "" >> dependency-summary.md
            
            echo "### Package Changes:" >> dependency-summary.md
            if [ -f package.json ]; then
              echo "\`\`\`diff" >> dependency-summary.md
              git diff package.json >> dependency-summary.md || true
              echo "\`\`\`" >> dependency-summary.md
            fi
          else
            echo "No dependency updates needed." >> dependency-summary.md
          fi

      - name: 🔍 Check for security fixes
        if: needs.security-audit.outputs.vulnerabilities == 'true'
        run: |
          echo "## 🔒 Security Fixes" >> dependency-summary.md
          echo "" >> dependency-summary.md
          echo "Security vulnerabilities were detected and fixes applied." >> dependency-summary.md
          echo "" >> dependency-summary.md

      - name: 📤 Create Pull Request
        if: success() && github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(deps): update ${{ inputs.update_type || 'minor' }} dependencies
            
            - Updated dependencies to latest ${{ inputs.update_type || 'minor' }} versions
            - All tests passing
            - Security audit clean
            
            Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          title: "🔄 Dependency Update: ${{ inputs.update_type || 'minor' }} updates"
          body-path: dependency-summary.md
          branch: chore/dependency-updates-${{ github.run_number }}
          labels: |
            dependencies
            automated
            ${{ needs.security-audit.outputs.vulnerabilities == 'true' && 'security' || '' }}
          reviewers: |
            educational-app/core-team
          assignees: |
            educational-app/maintainers

  # Educational content updates
  update-educational-content:
    name: 📚 Update Educational Content
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📚 Check for content updates
        run: |
          echo "Checking for educational content updates..."
          # TODO: Implement content versioning and updates
          # This could check for:
          # - New vocabulary words
          # - Updated learning modules
          # - Achievement definitions
          # - Reward templates
          
      - name: 🔔 Notify content team
        if: false  # Enable when content system is ready
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "📚 Educational content check completed",
              "attachments": [
                {
                  "color": "good",
                  "text": "Weekly educational content validation passed"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Dependency vulnerability monitoring
  vulnerability-monitor:
    name: 🛡️ Vulnerability Monitoring
    runs-on: ubuntu-latest
    if: always()
    needs: [security-audit, update-dependencies]

    steps:
      - name: 📊 Generate security report
        run: |
          echo "## 🛡️ Security Status Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Vulnerabilities Found:** ${{ needs.security-audit.outputs.vulnerabilities }}" >> $GITHUB_STEP_SUMMARY
          echo "**Security Updates:** ${{ needs.security-audit.outputs.security-updates }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.security-audit.outputs.vulnerabilities }}" = "true" ]; then
            echo "⚠️ **Action Required:** Security vulnerabilities detected!" >> $GITHUB_STEP_SUMMARY
            echo "Please review and approve the dependency update PR." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **All Clear:** No security vulnerabilities found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🔔 Critical security alert
        if: needs.security-audit.outputs.vulnerabilities == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "🚨 SECURITY ALERT: Vulnerabilities detected!",
              "attachments": [
                {
                  "color": "danger",
                  "text": "${{ needs.security-audit.outputs.security-updates }}",
                  "actions": [
                    {
                      "type": "button",
                      "text": "View PR",
                      "url": "${{ github.server_url }}/${{ github.repository }}/pulls"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}